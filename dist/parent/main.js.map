{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/configs/api-urls.config.ts","webpack:///./src/app/core/authentication/auth.service.ts","webpack:///./src/app/core/guards/auth.guard.ts","webpack:///./src/app/core/interceptors/api-prefix.interceptor.ts","webpack:///./src/app/core/interceptors/error-handler.interceptor.ts","webpack:///./src/app/core/interceptors/http.token.interceptor.ts","webpack:///./src/app/core/logger.service.ts","webpack:///./src/app/shared/components/page-not-found/page-not-found.component.css","webpack:///./src/app/shared/components/page-not-found/page-not-found.component.html","webpack:///./src/app/shared/components/page-not-found/page-not-found.component.ts","webpack:///./src/environments/environment.prod.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./modules/adminstration/adminstration.module\": [\n\t\t\"./src/app/modules/adminstration/adminstration.module.ts\",\n\t\t\"modules-adminstration-adminstration-module\"\n\t],\n\t\"./modules/users/users.module\": [\n\t\t\"./src/app/modules/users/users.module.ts\",\n\t\t\"modules-users-users-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { ExtraOptions, RouterModule, Routes } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { AuthGuard } from './core/guards/auth.guard';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    loadChildren:\n      './modules/adminstration/adminstration.module#AdminstrationModule'\n  },\n  {\n    path: 'admin',\n    loadChildren:\n      './modules/adminstration/adminstration.module#AdminstrationModule'\n  },\n  {\n    path: 'users',\n    loadChildren: './modules/users/users.module#UsersModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: '**',\n    component: PageNotFoundComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: '<router-outlet></router-outlet>'\n})\nexport class AppComponent implements OnInit {\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ApiPrefixInterceptor } from './core/interceptors/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './core/interceptors/error-handler.interceptor';\nimport { HttpTokenInterceptor } from './core/interceptors/http.token.interceptor';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { PageNotFoundComponent } from './shared/components/page-not-found/page-not-found.component';\n\n@NgModule({\n  declarations: [AppComponent, PageNotFoundComponent],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    MatIconModule,\n    MatButtonModule,\n    FormsModule,\n    MatPaginatorModule,\n    MatTableModule,\n    MatCardModule,\n    MatInputModule,\n    MatFormFieldModule,\n    MatProgressSpinnerModule\n  ],\n  bootstrap: [AppComponent],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: HttpTokenInterceptor,\n      multi: true\n    }\n  ]\n})\nexport class AppModule {}\n","import { environment } from 'src/environments/environment.prod';\r\n\r\nconst baseUrl = environment.baseUrl;\r\nexport const AuthUrls = {\r\n  login: baseUrl + 'api/login'\r\n};\r\n\r\nexport const UsersUrls = {\r\n  listUsers: baseUrl + 'api/users',\r\n  singleUser: baseUrl + 'api/users/',\r\n  createUser: baseUrl + 'api/users',\r\n  updateUser: baseUrl + 'api/users/',\r\n  deleteUser: baseUrl + 'api/users/'\r\n};\r\n","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Login } from 'src/app/shared/models/login.model';\r\nimport { AuthUrls } from 'src/app/configs/api-urls.config';\r\nimport { errorHandler } from '@angular/platform-browser/src/browser';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  token: any;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  login(model: Login) {\r\n    return this.http.post(AuthUrls.login, model).pipe(\r\n      map((response: any) => {\r\n        if (response && response.token) {\r\n          localStorage.setItem('token', response.token);\r\n          console.log(response.token);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  loggedIn() {\r\n    const token = localStorage.getItem('token');\r\n    return token ? true : false;\r\n  }\r\n\r\n  Logout() {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router, RouterStateSnapshot, ActivatedRouteSnapshot } from '@angular/router';\r\nimport { AuthService } from '../authentication/auth.service';\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n        if (this.authService.loggedIn()) {\r\n            return true;\r\n        }\r\n\r\n        this.router.navigate(['admin/login']);\r\n        return false;\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n/**\r\n * Prefixes all requests with `environment.serverUrl`.\r\n */\r\n@Injectable()\r\nexport class ApiPrefixInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    if (!/^(http|https):/i.test(request.url)) {\r\n      request = request.clone({ url: environment.baseUrl + request.url });\r\n    }\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { environment } from 'src/environments/environment';\r\nimport { Logger } from '../logger.service';\r\n\r\nconst log = new Logger('ErrorHandlerInterceptor');\r\n\r\n/**\r\n * Adds a default error handler to all requests.\r\n */\r\n@Injectable()\r\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    request: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    return next\r\n      .handle(request)\r\n      .pipe(catchError(error => this.errorHandler(error)));\r\n  }\r\n\r\n  // Customize the default error handler here if needed\r\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\r\n    if (!environment.production) {\r\n      // Do something with the error\r\n      log.info('Request error', response);\r\n      alert('Error Occured!');\r\n    }\r\n    throw response;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpTokenInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const headersConfig = {\r\n      'Content-Type': 'application/json',\r\n      Accept: 'application/json'\r\n    };\r\n\r\n    const token = localStorage.getItem('token');\r\n\r\n    if (token) {\r\n      headersConfig['Authorization'] = `Token ${token}`;\r\n    }\r\n\r\n    const request = req.clone({ setHeaders: headersConfig });\r\n    return next.handle(request);\r\n  }\r\n}\r\n","/**\r\n * Simple logger system with the possibility of registering custom outputs.\r\n *\r\n * 4 different log levels are provided, with corresponding methods:\r\n * - debug   : for debug information\r\n * - info    : for informative status of the application (success, ...)\r\n * - warning : for non-critical errors that do not prevent normal application behavior\r\n * - error   : for critical errors that prevent normal application behavior\r\n *\r\n * Example usage:\r\n * ```\r\n * import { Logger } from 'app/core/logger.service';\r\n *\r\n * const log = new Logger('myFile');\r\n * ...\r\n * log.debug('something happened');\r\n * ```\r\n *\r\n * To disable debug and info logs in production, add this snippet to your root component:\r\n * ```\r\n * export class AppComponent implements OnInit {\r\n *   ngOnInit() {\r\n *     if (environment.production) {\r\n *       Logger.enableProductionMode();\r\n *     }\r\n *     ...\r\n *   }\r\n * }\r\n *\r\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\r\n */\r\n\r\n/**\r\n * The possible log levels.\r\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\r\n */\r\nexport enum LogLevel {\r\n    Off = 0,\r\n    Error,\r\n    Warning,\r\n    Info,\r\n    Debug\r\n  }\r\n  \r\n  /**\r\n   * Log output handler function.\r\n   */\r\n  export type LogOutput = (source: string, level: LogLevel, ...objects: any[]) => void;\r\n  \r\n  export class Logger {\r\n  \r\n    /**\r\n     * Current logging level.\r\n     * Set it to LogLevel.Off to disable logs completely.\r\n     */\r\n    static level = LogLevel.Debug;\r\n  \r\n    /**\r\n     * Additional log outputs.\r\n     */\r\n    static outputs: LogOutput[] = [];\r\n  \r\n    /**\r\n     * Enables production mode.\r\n     * Sets logging level to LogLevel.Warning.\r\n     */\r\n    static enableProductionMode() {\r\n      Logger.level = LogLevel.Warning;\r\n    }\r\n  \r\n    constructor(private source?: string) { }\r\n  \r\n    /**\r\n     * Logs messages or objects  with the debug level.\r\n     * Works the same as console.log().\r\n     */\r\n    debug(...objects: any[]) {\r\n      this.log(console.log, LogLevel.Debug, objects);\r\n    }\r\n  \r\n    /**\r\n     * Logs messages or objects  with the info level.\r\n     * Works the same as console.log().\r\n     */\r\n    info(...objects: any[]) {\r\n      this.log(console.info, LogLevel.Info, objects);\r\n    }\r\n  \r\n    /**\r\n     * Logs messages or objects  with the warning level.\r\n     * Works the same as console.log().\r\n     */\r\n    warn(...objects: any[]) {\r\n      this.log(console.warn, LogLevel.Warning, objects);\r\n    }\r\n  \r\n    /**\r\n     * Logs messages or objects  with the error level.\r\n     * Works the same as console.log().\r\n     */\r\n    error(...objects: any[]) {\r\n      this.log(console.error, LogLevel.Error, objects);\r\n    }\r\n  \r\n    private log(func: Function, level: LogLevel, objects: any[]) {\r\n      if (level <= Logger.level) {\r\n        const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\r\n        func.apply(console, log);\r\n        Logger.outputs.forEach((output) => output.apply(output, [this.source, level].concat(objects)));\r\n      }\r\n    }\r\n  \r\n  }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9jb21wb25lbnRzL3BhZ2Utbm90LWZvdW5kL3BhZ2Utbm90LWZvdW5kLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<!-- begin:: Page -->\\n<div class=\\\"m-grid m-grid--hor m-grid--root m-page\\\" style=\\\"height: 100vh\\\">\\n  <div\\n    class=\\\"m-grid__item m-grid__item--fluid m-grid  m-error-2\\\"\\n    style=\\\"background-image: url(../../../../../../assets/media/images/error/bg2.jpg);\\\"\\n  >\\n    <div class=\\\"m-error_container\\\">\\n      <span class=\\\"m-error_title2 m--font-light\\\"> <h1>!OOPS</h1> </span>\\n      <span class=\\\"m-error_desc m--font-light\\\"> Not Found </span>\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- end:: Page -->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export const environment = {\n  production: true,\n  baseUrl : 'https://reqres.in/'\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl : 'https://reqres.in/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}